{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth/auth-service.service\";\nexport class PostServiceService {\n  //private postdisplay:{_id:string, title:string, description:string, departmentCode: string, __v: string}[] = []\n  //private updatedpostdisplay = new Subject<{_id:string, title:string, description:string, departmentCode: string, __v: string}[]>()\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.BASE_URL = 'https://localhost:3000/api/posts';\n  }\n  addpost_service(ptitle, pdescription, pdepartmentcode) {\n    const token = this.auth.getToken();\n    return this.http.post(this.BASE_URL, {\n      title: ptitle,\n      description: pdescription,\n      departmentCode: pdepartmentcode\n    }, {\n      headers: {\n        'x-auth-token': token ?? ''\n      }\n    });\n    //this.http.post('https://localhost:3000/api/posts', {title:ptitle, description:pdescription, departmentCode:pdepartmentcode})\n    //.subscribe(response => {console.log(response)})\n  }\n  static #_ = this.ɵfac = function PostServiceService_Factory(t) {\n    return new (t || PostServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostServiceService,\n    factory: PostServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PostServiceService","constructor","http","auth","BASE_URL","addpost_service","ptitle","pdescription","pdepartmentcode","token","getToken","post","title","description","departmentCode","headers","_","i0","ɵɵinject","i1","HttpClient","i2","AuthServiceService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\posts\\post-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { AuthServiceService } from '../auth/auth-service.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostServiceService {\n\n//private postdisplay:{_id:string, title:string, description:string, departmentCode: string, __v: string}[] = []\n//private updatedpostdisplay = new Subject<{_id:string, title:string, description:string, departmentCode: string, __v: string}[]>()\n\n  constructor(private http: HttpClient, private auth: AuthServiceService) { }\n\nprivate readonly BASE_URL = 'https://localhost:3000/api/posts'\n\n  addpost_service(ptitle: string, pdescription: string, pdepartmentcode: string )\n  {\nconst token = this.auth.getToken()\n\nreturn this.http.post(this.BASE_URL, {title:ptitle, description:pdescription, departmentCode:pdepartmentcode}, {headers: {'x-auth-token': token ?? '',}, })\n\n    //this.http.post('https://localhost:3000/api/posts', {title:ptitle, description:pdescription, departmentCode:pdepartmentcode})\n    //.subscribe(response => {console.log(response)})\n  }\n\n  /*\n  addpost_service(ptitle: string, pdescription: string, pdepartmentcode: string )\n  {\n    this.http.post('https://localhost:3000/api/posts', {title:ptitle, description:pdescription, departmentCode:pdepartmentcode})\n    .subscribe(response => {console.log(response)})\n  }\n  */\n\n\n  \n  /*\naddpost_service(ptitle: string, pdescription: string, pdepartmentcode: string )\n{\n  this.http.post<{message:string, posts:any}>('https://localhost:3000/api/posts', {title:ptitle, description:pdescription, departmentCode:pdepartmentcode})\n  .subscribe((posts))=>\n  {\nthis.postdisplay.push(posts.post)\nthis.updatedpostdisplay.next([...this.postdisplay])\n  }\n}\n*/\n\n\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,kBAAkB;EAE/B;EACA;EAEEC,YAAoBC,IAAgB,EAAUC,IAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAEnC,KAAAC,QAAQ,GAAG,kCAAkC;EAFc;EAI1EC,eAAeA,CAACC,MAAc,EAAEC,YAAoB,EAAEC,eAAuB;IAE/E,MAAMC,KAAK,GAAG,IAAI,CAACN,IAAI,CAACO,QAAQ,EAAE;IAElC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE;MAACQ,KAAK,EAACN,MAAM;MAAEO,WAAW,EAACN,YAAY;MAAEO,cAAc,EAACN;IAAe,CAAC,EAAE;MAACO,OAAO,EAAE;QAAC,cAAc,EAAEN,KAAK,IAAI;MAAE;IAAE,CAAG,CAAC;IAEvJ;IACA;EACF;EAAC,QAAAO,CAAA,G;qBAjBUhB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBvB,kBAAkB;IAAAwB,OAAA,EAAlBxB,kBAAkB,CAAAyB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}