{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n//import { LoginComponent } from './Login/login/login.component';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.option = this.router.url;\n  }\n  /*\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n  */\n  onlogin(loginform) {\n    if (loginform.invalid) {\n      // alert('Invalid!')\n      return;\n    }\n    //alert(loginform.value.username+':'+ loginform.value.password)\n    if (this.option == '/auth') {\n      this.authService.login(loginform.value.username, loginform.value.password);\n    } else {\n      // this.authService.signup(loginform.value.username, loginform.value.password);\n    }\n    //this.loginservice.login(loginform.value.username, loginform.value.password)\n    // loginform.resetForm()\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","router","option","url","onlogin","loginform","invalid","login","value","username","password","__decorate","selector","templateUrl","styleUrls"],"sources":["c:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\nimport { Router } from '@angular/router';\n//import { LoginComponent } from './Login/login/login.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  {\n\n\n  constructor(public authService: AuthServiceService, private router: Router) { }\n  \n  option: string = this.router.url\n  /*\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n  */\n\n  \n  onlogin(loginform: NgForm)\n  {\n    if (loginform.invalid)\n    {\n     // alert('Invalid!')\n      return\n    }\n    //alert(loginform.value.username+':'+ loginform.value.password)\n  \n    if (this.option == '/auth')\n    {\n      this.authService.login(loginform.value.username, loginform.value.password);\n    }\n    else\n    {\n     // this.authService.signup(loginform.value.username, loginform.value.password);\n    }\n\n    //this.loginservice.login(loginform.value.username, loginform.value.password)\n   // loginform.resetForm()\n    \n    \n  }\n  \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD;AAOO,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAmBC,WAA+B,EAAUC,MAAc;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAElE,KAAAC,MAAM,GAAW,IAAI,CAACD,MAAM,CAACE,GAAG;EAF8C;EAG9E;;;;;EAOAC,OAAOA,CAACC,SAAiB;IAEvB,IAAIA,SAAS,CAACC,OAAO,EACrB;MACC;MACC;;IAEF;IAEA,IAAI,IAAI,CAACJ,MAAM,IAAI,OAAO,EAC1B;MACE,IAAI,CAACF,WAAW,CAACO,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,QAAQ,EAAEJ,SAAS,CAACG,KAAK,CAACE,QAAQ,CAAC;KAC3E,MAED;MACC;IAAA;IAGD;IACD;EAGD;CAGD;;AAtCYZ,cAAc,GAAAa,UAAA,EAL1Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWhB,cAAc,CAsC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}