{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  static removeToken() {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n  }\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n  getToken() {\n    return localStorage.getItem('token'); //this.token;\n  }\n\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  login(pusername, ppassword) {\n    this.http.post('https://localhost:3000/api/auth', {\n      username: pusername,\n      password: ppassword\n    }).subscribe(response => {\n      const token = response.token;\n      this.setToken(token);\n      alert(\"Signed In\");\n    });\n  }\n  signup(pusername, ppassword, pfirstname, plastname) {\n    this.http.post('https://localhost:3000/api/users/', {\n      username: pusername,\n      password: ppassword,\n      firstName: pfirstname,\n      lastName: plastname\n    }).subscribe(response => {});\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthServiceService","removeToken","Error","constructor","http","localStorage","removeItem","getToken","getItem","setToken","token","setItem","login","pusername","ppassword","post","username","password","subscribe","response","alert","signup","pfirstname","plastname","firstName","lastName","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\auth\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  static removeToken() {\n    throw new Error('Method not implemented.');\n  }\n\n  private token!: string;\n\n  constructor(private http: HttpClient) { }\n\n  removeToken()\n  {\n    localStorage.removeItem('token')\n  }\n\n  getToken() {\n    return localStorage.getItem('token');//this.token;\n  }\n\n  setToken(token: string)\n  {\n    localStorage.setItem('token', token)\n  }\n\n  \n  login(pusername: string, ppassword: string)\n  {\n    this.http.post<{token: string}>('https://localhost:3000/api/auth',{username: pusername, password: ppassword})\n    .subscribe(response =>{\n      const token = response.token;\n \n      this.setToken(token)\n      alert(\"Signed In\")\n    })\n  }\n\n  signup(pusername: string, ppassword: string, pfirstname: string, plastname: string)\n  {\n    this.http.post('https://localhost:3000/api/users/',{username: pusername, password: ppassword, firstName: pfirstname, lastName: plastname})\n    .subscribe(response =>{\n    })\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAC7B,OAAOC,WAAWA,CAAA;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAIAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCH,WAAWA,CAAA;IAETI,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,QAAQA,CAAA;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,CAAC;EACvC;;EAEAC,QAAQA,CAACC,KAAa;IAEpBL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACtC;EAGAE,KAAKA,CAACC,SAAiB,EAAEC,SAAiB;IAExC,IAAI,CAACV,IAAI,CAACW,IAAI,CAAkB,iCAAiC,EAAC;MAACC,QAAQ,EAAEH,SAAS;MAAEI,QAAQ,EAAEH;IAAS,CAAC,CAAC,CAC5GI,SAAS,CAACC,QAAQ,IAAG;MACpB,MAAMT,KAAK,GAAGS,QAAQ,CAACT,KAAK;MAE5B,IAAI,CAACD,QAAQ,CAACC,KAAK,CAAC;MACpBU,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAACR,SAAiB,EAAEC,SAAiB,EAAEQ,UAAkB,EAAEC,SAAiB;IAEhF,IAAI,CAACnB,IAAI,CAACW,IAAI,CAAC,mCAAmC,EAAC;MAACC,QAAQ,EAAEH,SAAS;MAAEI,QAAQ,EAAEH,SAAS;MAAEU,SAAS,EAAEF,UAAU;MAAEG,QAAQ,EAAEF;IAAS,CAAC,CAAC,CACzIL,SAAS,CAACC,QAAQ,IAAG,CACtB,CAAC,CAAC;EACJ;EAAC,QAAAO,CAAA,G;qBAxCU1B,kBAAkB,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlB/B,kBAAkB;IAAAgC,OAAA,EAAlBhC,kBAAkB,CAAAiC,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}