{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor() {}\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  onlogin(loginForm) {\n    if (loginForm.invalid) {\n      alert(\"Invalid!\");\n      return;\n    }\n    alert(loginForm.value.email + \":\" + loginForm.value.password);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 10,\n    vars: 0,\n    consts: [[3, \"submit\"], [\"login\", \"ngForm\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"email\", \"placeholder\", \"your email\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^[a-zA-Z0-9\\\\s_-]+$\"], [\"email\", \"ngModel\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"password\", \"placeholder\", \"your password\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^[a-zA-Z0-9\\\\s_-]+$\"], [\"password\", \"ngModel\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_2_listener() {\n          return ctx.onlogin(ctx.submit);\n        });\n        i0.ɵɵelement(4, \"input\", 2, 3)(6, \"input\", 4, 5);\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵtext(9, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.PatternValidator, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","ngOnInit","Error","onlogin","loginForm","invalid","alert","value","email","password","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_submit_2_listener","submit","ɵɵelement"],"sources":["c:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\Login\\login\\login.component.ts","c:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\Login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  onlogin(loginForm: NgForm)\n  {\n    if (loginForm.invalid)\n    {\n      alert(\"Invalid!\")\n      return\n    }\n    alert(loginForm.value.email+ \":\" + loginForm.value.password)\n  }\n\n}\n","<p>login works!</p>\n\n<form (submit)=\"onlogin(submit)\" #login=\"ngForm\">\n   <input type=\"text\"\n   ngModel name=\"email\"\n   placeholder=\"your email\"\n   required\n   minlength=\"1\"\n   pattern=\"^[a-zA-Z0-9\\s_-]+$\"\n   #email =\"ngModel\">\n   <input type=\"text\"\n   ngModel name=\"password\"\n   placeholder=\"your password\"\n   required\n   minlength=\"1\"\n   pattern=\"^[a-zA-Z0-9\\s_-]+$\"\n   #password =\"ngModel\">\n\n   <button type = \"submit\">Login</button>\n</form>"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,OAAOA,CAACC,SAAiB;IAEvB,IAAIA,SAAS,CAACC,OAAO,EACrB;MACEC,KAAK,CAAC,UAAU,CAAC;MACjB;;IAEFA,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,KAAK,GAAE,GAAG,GAAGJ,SAAS,CAACG,KAAK,CAACE,QAAQ,CAAC;EAC9D;EAAC,QAAAC,CAAA,G;qBAhBUX,cAAc;EAAA;EAAA,QAAAY,EAAA,G;UAAdZ,cAAc;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BE,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,mBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAEnBH,EAAA,CAAAC,cAAA,iBAAiD;QAA3CD,EAAA,CAAAI,UAAA,oBAAAC,+CAAA;UAAA,OAAUN,GAAA,CAAAhB,OAAA,CAAAgB,GAAA,CAAAO,MAAA,CAAe;QAAA,EAAC;QAC7BN,EAAA,CAAAO,SAAA,kBAMkB;QASlBP,EAAA,CAAAC,cAAA,gBAAwB;QAAAD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}