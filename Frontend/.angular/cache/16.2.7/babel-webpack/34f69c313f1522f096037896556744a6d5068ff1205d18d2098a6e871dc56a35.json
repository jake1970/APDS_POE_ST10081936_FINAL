{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth-service.service\";\nexport class AuthInterceptor {\n  constructor(authservice) {\n    this.authservice = authservice;\n  }\n  intercept(request, next) {\n    const authToken = this.authservice.getToken();\n    const authRequest =\n    //request.clone({headers:request.headers.set(\"Authorization\", \"Bearer \"+authToken)})\n    request.clone({\n      headers: request.headers.set(\"x-auth-token\", authToken)\n    });\n    return next.handle(authRequest);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthInterceptor","constructor","authservice","intercept","request","next","authToken","getToken","authRequest","clone","headers","set","handle","_","i0","ɵɵinject","i1","AuthServiceService","_2","factory","ɵfac"],"sources":["C:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\auth\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthServiceService } from './auth-service.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authservice: AuthServiceService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler)\n   {\n    const authToken = this.authservice.getToken()\n    const authRequest =\n      //request.clone({headers:request.headers.set(\"Authorization\", \"Bearer \"+authToken)})\n      request.clone({headers:request.headers.set(\"x-auth-token\", authToken)})\n\n    return next.handle(authRequest);\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;EAAuB;EAEtDC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,MAAMC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IAC7C,MAAMC,WAAW;IACf;IACAJ,OAAO,CAACK,KAAK,CAAC;MAACC,OAAO,EAACN,OAAO,CAACM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,SAAS;IAAC,CAAC,CAAC;IAEzE,OAAOD,IAAI,CAACO,MAAM,CAACJ,WAAW,CAAC;EACjC;EAAC,QAAAK,CAAA,G;qBAZUb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}