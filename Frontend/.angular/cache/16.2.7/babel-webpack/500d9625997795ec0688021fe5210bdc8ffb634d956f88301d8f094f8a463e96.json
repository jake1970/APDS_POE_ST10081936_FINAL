{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { ErrorComponent } from './error/error.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class ErrorinterceptorInterceptor {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(error => {\n      // if (error.status >= 400) {\n      console.log('Error object:', error);\n      let errorMessage = \"An Unknown Error has occured\";\n      if (error.statusText) {\n        errorMessage = error.statusText;\n      }\n      this.dialog.open(ErrorComponent, {\n        data: {\n          message: errorMessage\n        }\n      });\n      // }\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function ErrorinterceptorInterceptor_Factory(t) {\n    return new (t || ErrorinterceptorInterceptor)(i0.ɵɵinject(i1.MatDialog));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorinterceptorInterceptor,\n    factory: ErrorinterceptorInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["catchError","throwError","ErrorComponent","ErrorinterceptorInterceptor","constructor","dialog","intercept","request","next","handle","pipe","error","console","log","errorMessage","statusText","open","data","message","_","i0","ɵɵinject","i1","MatDialog","_2","factory","ɵfac"],"sources":["C:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\error\\errorinterceptor.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog'\nimport { catchError } from 'rxjs/operators'\nimport { throwError } from 'rxjs'\nimport { ErrorComponent } from './error/error.component'; \n\n@Injectable()\nexport class ErrorinterceptorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler)\n  {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse)=>{\n       // if (error.status >= 400) {\n\n        console.log('Error object:', error);\n        let errorMessage = \"An Unknown Error has occured\"\n        if (error.statusText)\n        {\n          errorMessage = error.statusText\n        }\n        this.dialog.open(ErrorComponent, {data:{message:errorMessage}})\n     // }\n\n        return throwError(error)\n\n      })\n    )\n  }\n}\n"],"mappings":"AAUA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,MAAM;AACjC,SAASC,cAAc,QAAQ,yBAAyB;;;AAGxD,OAAM,MAAOC,2BAA2B;EAEtCC,YAAoBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;EAAc;EAExCC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CAACG,IAAI,CAC9BV,UAAU,CAAEW,KAAwB,IAAG;MACtC;MAECC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAAC;MACnC,IAAIG,YAAY,GAAG,8BAA8B;MACjD,IAAIH,KAAK,CAACI,UAAU,EACpB;QACED,YAAY,GAAGH,KAAK,CAACI,UAAU;;MAEjC,IAAI,CAACV,MAAM,CAACW,IAAI,CAACd,cAAc,EAAE;QAACe,IAAI,EAAC;UAACC,OAAO,EAACJ;QAAY;MAAC,CAAC,CAAC;MAClE;MAEG,OAAOb,UAAU,CAACU,KAAK,CAAC;IAE1B,CAAC,CAAC,CACH;EACH;EAAC,QAAAQ,CAAA,G;qBAvBUhB,2BAA2B,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;WAA3BrB,2BAA2B;IAAAsB,OAAA,EAA3BtB,2BAA2B,CAAAuB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}