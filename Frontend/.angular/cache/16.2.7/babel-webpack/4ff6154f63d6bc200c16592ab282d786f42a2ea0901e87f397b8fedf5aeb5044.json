{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getToken() {\n    return this.token;\n  }\n  login_service(pusername, ppassword) {\n    this.http.post('https://localhost:3000/api/auth', {\n      username: pusername,\n      password: ppassword\n    }).subscribe(response => {\n      const token = response.token;\n      this.token = token;\n    });\n  }\n  signup_service(pusername, ppassword, pfirstname, plastname) {\n    this.http.post('https://localhost:3000/api/users/', {\n      username: pusername,\n      password: ppassword,\n      firstName: pfirstname,\n      lastName: plastname\n    }).subscribe(response => {});\n  }\n  static #_ = this.ɵfac = function LoginServiceService_Factory(t) {\n    return new (t || LoginServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginServiceService,\n    factory: LoginServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoginServiceService","constructor","http","getToken","token","login_service","pusername","ppassword","post","username","password","subscribe","response","signup_service","pfirstname","plastname","firstName","lastName","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["c:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\Login\\login-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n\n  private token!: string;\n\n  constructor(private http: HttpClient) { }\n\n\n  getToken() {\n    return this.token;\n  }\n  \n  login_service(pusername: string, ppassword: string)\n  {\n    this.http.post<{token: string}>('https://localhost:3000/api/auth',{username: pusername, password: ppassword})\n    .subscribe(response =>{\n      const token = response.token;\n      this.token = token;\n    })\n  }\n\n  signup_service(pusername: string, ppassword: string, pfirstname: string, plastname: string)\n  {\n    this.http.post('https://localhost:3000/api/users/',{username: pusername, password: ppassword, firstName: pfirstname, lastName: plastname})\n    .subscribe(response =>{\n    })\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAGxCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EAEAC,aAAaA,CAACC,SAAiB,EAAEC,SAAiB;IAEhD,IAAI,CAACL,IAAI,CAACM,IAAI,CAAkB,iCAAiC,EAAC;MAACC,QAAQ,EAAEH,SAAS;MAAEI,QAAQ,EAAEH;IAAS,CAAC,CAAC,CAC5GI,SAAS,CAACC,QAAQ,IAAG;MACpB,MAAMR,KAAK,GAAGQ,QAAQ,CAACR,KAAK;MAC5B,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAS,cAAcA,CAACP,SAAiB,EAAEC,SAAiB,EAAEO,UAAkB,EAAEC,SAAiB;IAExF,IAAI,CAACb,IAAI,CAACM,IAAI,CAAC,mCAAmC,EAAC;MAACC,QAAQ,EAAEH,SAAS;MAAEI,QAAQ,EAAEH,SAAS;MAAES,SAAS,EAAEF,UAAU;MAAEG,QAAQ,EAAEF;IAAS,CAAC,CAAC,CACzIJ,SAAS,CAACC,QAAQ,IAAG,CACtB,CAAC,CAAC;EACJ;EAAC,QAAAM,CAAA,G;qBAzBUlB,mBAAmB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBvB,mBAAmB;IAAAwB,OAAA,EAAnBxB,mBAAmB,CAAAyB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}