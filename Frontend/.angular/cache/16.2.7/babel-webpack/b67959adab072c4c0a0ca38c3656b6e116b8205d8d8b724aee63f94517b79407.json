{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\n//import { LoginComponent } from './Login/login/login.component';\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.option = this.router.url;\n  }\n  ngOnInit() {}\n  onlogin(loginform) {\n    if (loginform.invalid) {\n      //alert('Invalid!')\n      //return\n    }\n    //alert(loginform.value.username+':'+ loginform.value.password)\n    if (this.option == '/') {\n      this.authService.login(loginform.value.username, loginform.value.password);\n    } else {\n      // this.authService.signup(loginform.value.username, loginform.value.password);\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[3, \"submit\"], [\"login\", \"ngForm\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"username\", \"placeholder\", \"your username\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^[\\\\w\\\\-\\\\.]+@([\\\\w\\\\-]+\\\\.)+[\\\\w\\\\-]{2,4}$\"], [\"username\", \"ngModel\"], [4, \"ngif\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"placeholder\", \"your password\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^([a-zA-Z0-9@*#]{8,15})$\"], [\"password\", \"ngModel\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onlogin(_r0));\n        });\n        i0.ɵɵelement(2, \"input\", 2, 3);\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelement(5, \"br\")(6, \"input\", 5, 6);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        const _r3 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngif\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngif\", _r3.invalid && (_r3.dirty || _r3.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.option);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.PatternValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","authService","router","option","url","ngOnInit","onlogin","loginform","invalid","login","value","username","password","_","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","LoginComponent_div_4_Template","LoginComponent_div_8_Template","ɵɵadvance","ɵɵproperty","_r1","dirty","touched","_r3","ɵɵtextInterpolate"],"sources":["c:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\auth\\login\\login.component.ts","c:\\Users\\jakey\\OneDrive\\Desktop\\APDS\\APDS7311_POE\\Frontend\\frontend\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\nimport { Router } from '@angular/router';\n//import { LoginComponent } from './Login/login/login.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit  {\n\n\n  constructor(public authService: AuthServiceService, private router: Router) { }\n  \n  option: string = this.router.url\n  \n\n  ngOnInit(): void {\n  }\n  \n\n  \n  onlogin(loginform: NgForm)\n  {\n    if (loginform.invalid)\n    {\n     //alert('Invalid!')\n      //return\n    }\n    //alert(loginform.value.username+':'+ loginform.value.password)\n  \n    if (this.option == '/')\n    {\n      this.authService.login(loginform.value.username, loginform.value.password);\n    }\n    else\n    {\n     // this.authService.signup(loginform.value.username, loginform.value.password);\n    }\n\n\n    \n    \n  }\n  \n\n}\n","<!-- <p>login works!</p> -->\n  <!--pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"-->\n\n<form (submit)=\"onlogin(login)\" #login=\"ngForm\">\n    <input type=\"text\"\n    ngModel name=\"username\"\n    placeholder=\"your username\"\n    required\n    minlength=\"1\"\n    pattern=\"^[\\w\\-\\.]+@([\\w\\-]+\\.)+[\\w\\-]{2,4}$\"\n    #username =\"ngModel\"/>\n    <div *ngif=\"username.invalid && (username.dirty || username.touched)\">invalid</div>\n    <br>\n    <input type=\"password\"\n    ngModel name=\"password\"\n    placeholder=\"your password\"\n    required\n    minlength=\"1\"\n    pattern=\"^([a-zA-Z0-9@*#]{8,15})$\"\n    #password =\"ngModel\"/>\n    <div *ngif=\"password.invalid && (password.dirty || password.touched)\">invalid</div>\n    <br>\n<button type = \"submit\">{{option}}</button>\n</form> "],"mappings":";;;;;;ICWIA,EAAA,CAAAC,cAAA,UAAsE;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IASnFH,EAAA,CAAAC,cAAA,UAAsE;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADhBvF;AAOA,OAAM,MAAOC,cAAc;EAGzBC,YAAmBC,WAA+B,EAAUC,MAAc;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAElE,KAAAC,MAAM,GAAW,IAAI,CAACD,MAAM,CAACE,GAAG;EAF8C;EAK9EC,QAAQA,CAAA,GACR;EAIAC,OAAOA,CAACC,SAAiB;IAEvB,IAAIA,SAAS,CAACC,OAAO,EACrB;MACC;MACC;IAAA;IAEF;IAEA,IAAI,IAAI,CAACL,MAAM,IAAI,GAAG,EACtB;MACE,IAAI,CAACF,WAAW,CAACQ,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,QAAQ,EAAEJ,SAAS,CAACG,KAAK,CAACE,QAAQ,CAAC;KAC3E,MAED;MACC;IAAA;EAMH;EAAC,QAAAC,CAAA,G;qBAlCUd,cAAc,EAAAJ,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAArB,EAAA,CAAAmB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdpB,cAAc;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCR3B/B,EAAA,CAAAC,cAAA,iBAAgD;QAA1CD,EAAA,CAAAiC,UAAA,oBAAAC,+CAAA;UAAAlC,EAAA,CAAAmC,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAArC,EAAA,CAAAsC,WAAA;UAAA,OAAUtC,EAAA,CAAAuC,WAAA,CAAAP,GAAA,CAAArB,OAAA,CAAA0B,GAAA,CAAc;QAAA,EAAC;QAC3BrC,EAAA,CAAAwC,SAAA,kBAMsB;QACtBxC,EAAA,CAAAyC,UAAA,IAAAC,6BAAA,iBAAmF;QACnF1C,EAAA,CAAAwC,SAAA,SAAI;QAQJxC,EAAA,CAAAyC,UAAA,IAAAE,6BAAA,iBAAmF;QACnF3C,EAAA,CAAAwC,SAAA,SAAI;QACRxC,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,IAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;QAXjCH,EAAA,CAAA4C,SAAA,GAA8D;QAA9D5C,EAAA,CAAA6C,UAAA,SAAAC,GAAA,CAAAjC,OAAA,KAAAiC,GAAA,CAAAC,KAAA,IAAAD,GAAA,CAAAE,OAAA,EAA8D;QAS9DhD,EAAA,CAAA4C,SAAA,GAA8D;QAA9D5C,EAAA,CAAA6C,UAAA,SAAAI,GAAA,CAAApC,OAAA,KAAAoC,GAAA,CAAAF,KAAA,IAAAE,GAAA,CAAAD,OAAA,EAA8D;QAEhDhD,EAAA,CAAA4C,SAAA,GAAU;QAAV5C,EAAA,CAAAkD,iBAAA,CAAAlB,GAAA,CAAAxB,MAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}